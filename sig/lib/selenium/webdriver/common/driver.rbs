module Selenium
  module WebDriver
    class Driver
      include SearchContext

      include TakesScreenshot

      def self.for: (Symbol browser, ?::Hash[Symbol, untyped] opts) -> Driver

      def initialize: (?bridge: Remote::Bridge? bridge, ?listener: Support::AbstractEventListener? listener, **untyped opts) -> void

      def inspect: () -> String

      def status: () -> Hash[untyped, untyped]

      def navigate: () -> Navigation

      def switch_to: () -> TargetLocator

      def manage: () -> Manager

      def action: (**untyped opts) -> ActionBuilder

      def get: (String url) -> untyped

      def current_url: () -> String

      def title: () -> String

      def page_source: () -> String

      def quit: () -> WebDriver::Remote::Response?

      def close: () -> WebDriver::Remote::Response?

      def window_handles: () -> Array[String]

      def window_handle: () -> String

      def execute_script: (String script, *untyped args) -> untyped

      def execute_async_script: (String script, *untyped args) -> untyped

      def add_virtual_authenticator: (untyped options) -> VirtualAuthenticator

      alias first find_element

      alias all find_elements

      alias script execute_script

      def []: (String | Hash[untyped, untyped] sel) -> Element

      def browser: () -> Symbol

      def capabilities: () -> untyped

      def ref: () -> ::Array[:driver | nil]

      private

      attr_reader bridge: Remote::Bridge

      def create_bridge: (caps: untyped caps, url: String url, ?http_client: untyped? http_client) -> untyped

      def service_url: (untyped service) -> untyped

      def screenshot: () -> untyped

      def add_extensions: (Symbol browser) -> untyped
    end
  end
end
